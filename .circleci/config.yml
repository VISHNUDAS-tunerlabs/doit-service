# version: 2.17
# jobs:
#   build:
#     docker:
#       - image: circleci/node:10.0.0
#     working_directory: ~/project-service/
#     steps:
#       - checkout
#       - restore_cache:
#           key: dependency-cache-{{ checksum "package.json" }}
#       - run:
#           name: update-npm
#           command: 'sudo npm install -g npm@latest'
#       - run:
#           name: install-npm
#           command: npm install
#       - save_cache:
#           key: dependency-cache-{{checksum "package.json"}}
#           paths:
#             - ./node_modules
#       - run:
#           name: Executing unit test cases
#           command: npm install nyc && npm run coverage
      
#       - run: 
#           name: Install sonar scanner
#           command: 'sudo npm install -g sonarqube-scanner'
          
#       - run: 
#           name: Sonar scanner
#           command: |
#                   sonar-scanner
# workflows:
#   version: 2
#   build_and_test:
#     jobs:
#       - build
version: 2.1 # CircleCI version
orbs:
  sonarcloud: sonarsource/sonarcloud@1.1.1
jobs:
  build:
    machine: #Linux machine instead of docker environment
      image: ubuntu-2004:202111-01
      docker_layer_caching: true
    working_directory: ~/project-service # Default working directory
    steps:
      - checkout:
          path: ~/project-service
      - restore_cache:
          key: project-service-dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          key: project-service-dependency-cache-{{checksum "package.json"}}
          paths:
            - ./node_modules
      - run:
          name: Executing unit test cases
          command: npm test -- --collectCoverage --collectCoverageFrom="modules/helper/*"
      - store_artifacts:
          path: coverage/
          destination: /coverage/
      - sonarcloud/scan
      - run:
          name: Checking prerequisites
          command: |-
            docker-compose --version
      - run:
          name: Starting the docker containers
          command: |-
            cd dev-ops/ && docker-compose up -d
      - run:
          name: Running test cases
          command: |-
            npm run test:integration
      - store_test_results:
          path: ./dev-ops/report

workflows:
  build-and-test: # This is the name of the workflow,
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build:
          context:
            - SonarCloud
          filters:
            tags:
              only:
                - develop
#test commit