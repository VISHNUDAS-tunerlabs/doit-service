version: '3'
services:
  zookeeper:
    image: 'confluentinc/cp-zookeeper:7.3.0'
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    networks:
      - elevate_net
    logging:
      driver: none
  kafka:
    image: 'confluentinc/cp-kafka:7.3.0'
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - elevate_net
    logging:
      driver: none
  mongo:
    image: 'mongo:4.1.4'
    container_name: mongo
    restart: 'always'
    command:
      - '--logpath'
      - '/var/log/mongodb/mongod.log'
    ports:
      - '27017:27017'
    networks:
      - elevate_net
    volumes:
      - mongo-data:/data/db
      - logs:/var/log/mongodb
  redis:
    image: 'redis:7.0.0'
    container_name: redis
    restart: 'always'
    ports:
      - '6379:6379'
    networks:
      - elevate_net
    logging:
      driver: none
  citus:
    image: citusdata/citus:11.2.0
    container_name: 'citus_master'
    ports:
      - 5432:5432
    environment: &AUTH
      POSTGRES_USER: '${POSTGRES_USER:-postgres}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD:-postgres}'
      PGUSER: '${POSTGRES_USER:-postgres}'
      PGPASSWORD: '${POSTGRES_PASSWORD:-postgres}'
      POSTGRES_DB: 'postgres'
      POSTGRES_HOST_AUTH_METHOD: '${POSTGRES_HOST_AUTH_METHOD:-trust}'
      POSTGRES_LOG_STATEMENT: 'all' # Enable query logging (set to 'all' for all queries)
    networks:
      - elevate_net
  project:
    build: '.'
    # image: elevate-unnati
    # image: shikshalokamqa/elevate-samiksha-service:0.0.6
    container_name: project
    ports:
      - '5000:5000'
    # volumes:
    #   - .:/var/src  
    command: ['nodemon', 'app.js']
    environment:
      - MONGODB_URL=mongodb://mongo:27017/elevate-diksha
    env_file:
      - ${unnati_env}
    depends_on:
      - mongo
    networks:
      - elevate_net
  
networks:
  elevate_net:
volumes:
  mongo-data:
  logs:
